{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","name","email","body","className","href","CommentList","comments","map","comment","id","UserInfo","PostInfo","title","user","length","PostList","posts","post","postsFromServer","usersFromServer","find","userId","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"sx8IAAaA,EAAc,SAAC,GAAD,IACzBC,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,MACAC,EAHyB,EAGzBA,KAHyB,OAKzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACtC,OACD,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAGL,qBAAKE,UAAU,oBAAf,SAAoCD,QCX3BG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEER,KAAMQ,EAAQR,KACdC,MAAOO,EAAQP,MACfC,KAAMM,EAAQN,MAHTM,EAAQC,UCNRC,EAAW,SAAC,GAAD,IACtBV,EADsB,EACtBA,KACAC,EAFsB,EAEtBA,MAFsB,OAItB,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,KCFQW,EAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,MACAC,EAFsB,EAEtBA,KACAX,EAHsB,EAGtBA,KACAI,EAJsB,EAItBA,SAJsB,OAMtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IAChCC,GACC,8BACG,eACD,cAAC,EAAD,CACEZ,MAAOY,EAAKZ,MACZD,KAAMa,EAAKb,aAKnB,mBAAGG,UAAU,iBAAb,SAA+BD,IAC/B,uBACqB,IAApBI,EAASQ,OACR,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaR,SAAUA,QCzBhBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAU,GAAI,OACb,cAAC,EAAD,CAEEL,MAAOK,EAAKL,MACZC,KAAMI,EAAKJ,KACXX,KAAMe,EAAKf,KACXI,SAAUW,EAAKX,UAJVW,EAAKR,UCKlB,IAAMO,EAAQE,EAAgBX,KAAI,SAAAU,GAAI,kCACjCA,GADiC,IAEpCJ,KAAMM,EAAgBC,MAAK,SAAAP,GAAI,OAAIA,EAAKJ,KAAOQ,EAAKI,UACpDf,UAP2BgB,EAOGL,EAAKR,GAN5Bc,EAAmBC,QAAO,SAAAhB,GAAO,OAAIA,EAAQc,SAAWA,QADjE,IAA6BA,KAUhBG,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QChBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c87d06d3.chunk.js","sourcesContent":["export const CommentInfo = ({\n  name,\n  email,\n  body,\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n      {' by '}\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n        {email}\n      </a>\n    </div>\n    <div className=\"CommentInfo__body\">{body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        key={comment.id}\n        name={comment.name}\n        email={comment.email}\n        body={comment.body}\n      />\n    ))}\n  </div>\n);\n","export const UserInfo = ({\n  name,\n  email,\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({\n  title,\n  user,\n  body,\n  comments,\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n      {user && (\n        <p>\n          {' Posted by  '}\n          <UserInfo\n            email={user.email}\n            name={user.name}\n          />\n        </p>\n      )}\n    </div>\n    <p className=\"PostInfo__body\">{body}</p>\n    <hr />\n    {comments.length === 0 ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (\n      <CommentList comments={comments} />\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        title={post.title}\n        user={post.user}\n        body={post.body}\n        comments={post.comments}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport usersFromServer from './api/users.json';\nimport commentsFromServer from './api/comments.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: usersFromServer.find(user => user.id === post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}